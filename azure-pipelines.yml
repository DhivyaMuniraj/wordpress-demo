trigger:
 branches:
   include:
     - main
pool:
  vmImage: ubuntu-latest
  
variables:
  artifactName: 'drop'


stages:
  - stage: Build
    jobs:
      - job: "Detect"
        steps:
          - checkout: self
          - task: NodeTool@0
            inputs:
              versionSpec: '20.x'
            displayName: 'Install Node.js'
            condition: |
              contains(variables['Build.ChangedFiles'], 'wp-content/')
          - script: |
              cd wp-content/themes/RSNE
              npm install
              npm run build

            displayName: 'npm install and build'
  #         - task: ArchiveFiles@2
  #           inputs:
  #             rootFolderOrFile: '$(Build.SourcesDirectory)'
  #             includeRootFolder: true
  #             archiveType: 'zip'
  #             archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
  #             replaceExistingArchive: true
  #         - task: PublishBuildArtifacts@1
  #           inputs:
  #             PathtoPublish: '$(Build.ArtifactStagingDirectory)'
  #             ArtifactName: '$(artifactName)'
  #             publishLocation: 'Container'

  # - stage: Deploy
  #   dependsOn: Build
  #   condition: succeeded()
  #   jobs:
  #     - job: "Deploy"
  #       steps:
  #         - task: ExtractFiles@1
  #           inputs:
  #             archiveFilePatterns: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
  #             destinationFolder: '$(System.DefaultWorkingDirectory)/extracted'
  #             cleanDestinationFolder: true
  #             overwriteExistingFiles: false
  #         - script: |
  #             mv $(System.DefaultWorkingDirectory)/extracted/s/* $(System.DefaultWorkingDirectory)/extracted/
  #             rmdir $(System.DefaultWorkingDirectory)/extracted/s
  #           displayName: 'Move files from "s" folder'
  #         - task: AzureWebApp@1
  #           inputs:
  #             azureSubscription: 'Sample'
  #             appType: 'webAppLinux'
  #             appName: wordpressdem
  #             resourceGroupName: rsne-demo
  #             package: '$(System.DefaultWorkingDirectory)/extracted'