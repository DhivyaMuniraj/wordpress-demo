trigger:
 branches:
   include:
     - main
pool:
  vmImage: windows-latest
  
variables:
  artifactName: 'drop'


stages:
  - stage: Build
    jobs:
      - job: "Detect"
        
        steps:
          - checkout: self
            fetchDepth: 0
          - script: |
                git diff --name-only HEAD^ HEAD wp-content/
          - powershell: |
                 
                  # Return $true if Files/ path is in the list of changed files, otherwise $false
                  # $changedFiles = $(Build.SourcesDirectory)/wp-content
                  $changesDetected = git diff --name-only HEAD^ HEAD wp-content/
                  if ($changesDetected) {
                    Write-Host "Changes detected in wp-content"
                    Write-Host "##vso[task.setvariable variable=wpContentChanged;]true"  # Set variable to true
                  }
                  Write-Host "Chnaged file `n$filesChanged"

          - task: NodeTool@0
            inputs:
              versionSpec: '20.x'
            displayName: 'Install Node.js'
            condition: eq(variables['WpContentChanged'], 'true')
          - script: |
              cd wp-content/themes/RSNE
              npm install
              npm run build

            displayName: 'npm install and build'
  #         - task: ArchiveFiles@2
  #           inputs:
  #             rootFolderOrFile: '$(Build.SourcesDirectory)'
  #             includeRootFolder: true
  #             archiveType: 'zip'
  #             archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
  #             replaceExistingArchive: true
  #         - task: PublishBuildArtifacts@1
  #           inputs:
  #             PathtoPublish: '$(Build.ArtifactStagingDirectory)'
  #             ArtifactName: '$(artifactName)'
  #             publishLocation: 'Container'

  # - stage: Deploy
  #   dependsOn: Build
  #   condition: succeeded()
  #   jobs:
  #     - job: "Deploy"
  #       steps:
  #         - task: ExtractFiles@1
  #           inputs:
  #             archiveFilePatterns: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
  #             destinationFolder: '$(System.DefaultWorkingDirectory)/extracted'
  #             cleanDestinationFolder: true
  #             overwriteExistingFiles: false
  #         - script: |
  #             mv $(System.DefaultWorkingDirectory)/extracted/s/* $(System.DefaultWorkingDirectory)/extracted/
  #             rmdir $(System.DefaultWorkingDirectory)/extracted/s
  #           displayName: 'Move files from "s" folder'
  #         - task: AzureWebApp@1
  #           inputs:
  #             azureSubscription: 'Sample'
  #             appType: 'webAppLinux'
  #             appName: wordpressdem
  #             resourceGroupName: rsne-demo
  #             package: '$(System.DefaultWorkingDirectory)/extracted'