# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
  vmImage: ubuntu-latest
  
variables:
  artifactName: 'myArtifact'

stages:
  - stage: Build
    jobs:
      - job: "Detect"
        steps:
          - checkout: self
          - script: |
              echo "Checking for changes in wp-content..."
              git fetch origin main
              git diff --name-only origin/main...HEAD > changed.txt

              if grep -q '^wp-content/themes/RSNE/' changed.txt; then
                echo "wp-content was changed"
                echo "##vso[task.setvariable variable=wpContentChanged]true"
              else
                echo "wp-content NOT changed"
                echo "##vso[task.setvariable variable=wpContentChanged]false"
              fi
            displayName: "Detect wp-content Changes"
          - task: NodeTool@0
            inputs:
              versionSpec: '20.x'
            displayName: 'Install Node.js'

          - script: |
              cd wp-content/themes/RSNE
              npm install
              npm run build
            condition: eq(variables['wpContentChanged'], 'true')
            displayName: 'npm install and build'
          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(Build.SourcesDirectory)'
              includeRootFolder: true
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
              replaceExistingArchive: true
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
              ArtifactName: '$(artifactName)'
              publishLocation: 'Container'

  - stage: Deploy
    dependsOn: Build
    condition: succeeded()
    jobs:
      - job: "Deploy"
        steps:
          # - task: DownloadBuildArtifacts@0
          #   inputs:
          #     buildType: 'current'
          #     downloadType: 'single'
          #     artifactName: '$(artifactName)'
          #     downloadPath: '$(Build.ArtifactStagingDirectory)'
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'Sample'
              appType: 'webAppLinux'
              appName: wordpressdem
              resourceGroupName: rsne-demo
              package: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
