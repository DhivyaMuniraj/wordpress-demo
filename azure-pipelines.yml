trigger:
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest
stages:
  - stage: Build
    jobs:
      - job: "DetectChanges"
        steps:
          - checkout: self
            fetchDepth: 0
          - script: |
              ls
              chmod +x ./script/detect_changes.sh
              ./script/detect_changes.sh
          - task: NodeTool@0
            condition: eq(variables.runNodeTask, 'True')
            inputs:
              versionSource: 'spec'
              versionSpec: '20.x'
          - script: |
                  echo "$(themeDirectory)"
                  cd $(themeDirectory)
                  npm install
                  npm run build
            condition: eq(variables.runNodeTask, 'True')
            displayName: 'npm install, build' 
          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
              replaceExistingArchive: true
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
              publishLocation: 'Container'

  - stage: Deploy
    dependsOn: Build
    condition: succeeded()
    jobs:
      - job: "Deploy"
        steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: Sample
              appType: 'webAppLinux'
              appName: $(appName)
              resourceGroupName: $(resourceGroupName)
              package: '$(System.DefaultWorkingDirectory)/drop/$(Build.BuildId).zip'