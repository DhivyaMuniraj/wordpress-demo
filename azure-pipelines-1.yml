trigger:
  branches:
    include:
      - main
  paths:
    include:
      - wp-content/*
      - wp-admin/*
      - wp-includes/*

pool:
  vmImage: 'ubuntu-latest'

variables:
  ArtifactName: drop
  ZipOutput: $(Build.ArtifactStagingDirectory)/site.zip

stages:

# 1. Detect if wp-content changed
- stage: DetectChanges
  displayName: "Detect Changed Folders"
  jobs:
    - job: Detect
      displayName: "Check wp-content Changes"
      steps:
        - checkout: self

        - script: |
            echo "Checking for changes in wp-content..."
            git fetch origin main
            git diff --name-only origin/main...HEAD > changed.txt

            if grep -q '^wp-content/' changed.txt; then
              echo "wp-content was changed"
              echo "##vso[task.setvariable variable=wpContentChanged]true"
            else
              echo "wp-content NOT changed"
              echo "##vso[task.setvariable variable=wpContentChanged]false"
            fi
          displayName: "Detect wp-content Changes"

# 2. Conditionally run npm install/build if wp-content changed
- stage: Build
  displayName: "Optional Node Build"
  dependsOn: DetectChanges
  condition: eq(variables['wpContentChanged'], 'true')
  jobs:
    - job: NodeBuild
      displayName: "Build wp-content"
      steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '16.x'
          displayName: "Install Node.js"

        - script: |
            cd wp-content
            npm install
          displayName: "Install NPM packages"

        - script: |
            cd wp-content
            npm run build
          displayName: "Run Build"

# 3. Zip project and publish
- stage: Publish
  displayName: "Zip & Publish"
  dependsOn: [DetectChanges, Build]
  jobs:
    - job: ZipAndPublish
      displayName: "Zip and Upload Artifacts"
      steps:
        - script: |
            echo "Zipping project..."
            zip -r $(ZipOutput) wp-content wp-admin wp-includes
          displayName: "Create ZIP File"

        - publish: $(ZipOutput)
          artifact: $(ArtifactName)
          displayName: "Publish Artifact: $(ArtifactName)"